
### Library

lib_LTLIBRARIES += lib/emile/libemile.la

installed_emilemainheadersdir = $(includedir)/emile-@VMAJ@
dist_installed_emilemainheaders_DATA = lib/emile/Emile.h

lib_emile_libemile_la_SOURCES = \
lib/emile/emile_private.h \
lib/emile/emile_main.c \
lib/emile/emile_cipher.c

lib_emile_libemile_la_CPPFLAGS = -I$(top_builddir)/src/lib/efl \
-I$(top_srcdir)/src/static_libs/lz4 \
-DPACKAGE_BIN_DIR=\"$(bindir)\" \
-DPACKAGE_LIB_DIR=\"$(libdir)\" \
-DPACKAGE_DATA_DIR=\"$(datadir)/emile\" \
@EMILE_CFLAGS@
lib_emile_libemile_la_LIBADD = @EMILE_LIBS@
lib_emile_libemile_la_DEPENDENCIES = @EMILE_INTERNAL_LIBS@
lib_emile_libemile_la_LDFLAGS = @EFL_LTLIBRARY_FLAGS@

EXTRA_DIST += static_libs/lz4/README

### Binary

# None yet, maybe a tool to manually use cypher/compression ?

### Unit tests

if EFL_ENABLE_TESTS

check_PROGRAMS += tests/emile/emile_suite
TESTS += tests/emile/emile_suite

tests_emile_emile_suite_SOURCES = \
tests/emile/emile_suite.c

tests_emile_emile_suite_CPPFLAGS = -I$(top_builddir)/src/lib/efl \
-DTESTS_WD=\"`pwd`\" \
-DTESTS_SRC_DIR=\"$(top_srcdir)/src/tests/emile\" \
-DTESTS_BUILD_DIR=\"$(top_builddir)/src/tests/emile\" \
@CHECK_CFLAGS@ \
@EMILE_CFLAGS@

tests_emile_emile_suite_LDADD = @CHECK_LIBS@ @USE_EMILE_LIBS@
tests_emile_emile_suite_DEPENDENCIES = @USE_EMILE_INTERNAL_LIBS@

endif
